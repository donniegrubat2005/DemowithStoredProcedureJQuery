//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemowithStoredProcedureJQuery.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Table1Context : DbContext
    {
        public Table1Context()
            : base("name=Table1Context")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Table_1> Table_1 { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int createsp(Nullable<int> employeeNumber, string firstName, string lastName, string address, string status, Nullable<System.DateTime> birthday, Nullable<int> age, string sex)
        {
            var employeeNumberParameter = employeeNumber.HasValue ?
                new ObjectParameter("EmployeeNumber", employeeNumber) :
                new ObjectParameter("EmployeeNumber", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createsp", employeeNumberParameter, firstNameParameter, lastNameParameter, addressParameter, statusParameter, birthdayParameter, ageParameter, sexParameter);
        }
    
        public virtual int deletesp(Nullable<int> employeeNumber)
        {
            var employeeNumberParameter = employeeNumber.HasValue ?
                new ObjectParameter("EmployeeNumber", employeeNumber) :
                new ObjectParameter("EmployeeNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deletesp", employeeNumberParameter);
        }
    
        public virtual int updatesp(Nullable<int> employeeNumber, string firstName, string lastName, string address, string status, Nullable<System.DateTime> birthday, Nullable<int> age, string sex)
        {
            var employeeNumberParameter = employeeNumber.HasValue ?
                new ObjectParameter("EmployeeNumber", employeeNumber) :
                new ObjectParameter("EmployeeNumber", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updatesp", employeeNumberParameter, firstNameParameter, lastNameParameter, addressParameter, statusParameter, birthdayParameter, ageParameter, sexParameter);
        }
    
        public virtual ObjectResult<selectsp_Result> selectsp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectsp_Result>("selectsp");
        }
    }
}
